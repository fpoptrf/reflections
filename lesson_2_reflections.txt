What happens when you initialize a repository? Why do you need to do it?

    When I initialize a repository, .git directory is created to keep tracking changes and
    save snapshot for each commit. Initializing repository is required to select which files
    to be managed by version control system.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    The staging area is in between the working directory and the repository. It offers
    functionality to select files to be included in a commit.

How can you use the staging area to make sure you have one commit per logical change?

    We can use staging area to sepalate multiple logical change to single logical change.
    This functionality helps us to follow the rule "one commit per logical change".

What are some situations when branches would be helpful in keeping your history organized?
How would branches help?

    It is helpful if we maintain multiple codes for released product and developing.
    We may use main branch for fixing bugs of released product, and develop branch for
    adding some new features to developing version.

How do the diagrams help you visualize the branch structure?

    The diagram explains which branch contains which commits.

What is the result of merging two branches together? Why do we represent it in the diagram
the way we do?

    Once we have merged two branches, we are able to access a commit of both branches.
    We represent it in the diagram the way we do. Because if we separatedly treat branches,
    it helps us to understand commit history.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

    Pros of automatic merging: It reduces human error when marging branches.
    Cons of automatic merging: If there is a conflict, it is not able to resolve the
    conflict.
    Pros of always doing merges manually: This solution can always resolve conflict.
    Cons of always doing merges manually: This solution is very tough, this may lead to
    human error.
