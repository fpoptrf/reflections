How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By using diff the line, which was modified, was picked up. So it helps
    finding out what the problem is.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It reduces time to find a bug, especially in large project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    We can create a commit per logical change. This makes it easy to understand
    the intension. However we may stuff a lot of work into one commit, this makes
    difficult to understand what was made.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Highly related changes between multiple files exists in some codes, like html
    and css files. So Git allows us to handle changes made between multiple files
    in one commit. However other VCS, like Google Docs does not have idea of commit,
    it is impossible to recognize changes made between multiple files. So they simply
    treats each file separately. 

How can you use the commands git log and git diff to view the history of files?

    I use git log for checking the history of changes made. I use git diff for viewing
    source code changes between to commits.

How might using version control make you more confident to make changes that
could break something?

    I use version control when collaborating code with someone else.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git for developing Android app project.
